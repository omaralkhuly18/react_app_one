{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OMAR\\\\new-app-react\\\\src\\\\component\\\\counter.jsx\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  classRender() {\n    let classes = \"num1 text-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n  formatCount() {\n    const {\n      value\n    } = this.props.counter;\n    return value === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"num1\",\n      children: \"Zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 30\n    }, this) : value;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Counter #\", this.props.counter.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.classRender(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.handleIncrement(this.props.counter),\n        className: \"btn btn-primary btn-lg\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.onDelete(this.props.counter.id),\n        className: \"btn btn-danger btn-sm m-2\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Counter;\n\n// الفرق الأساسي هنا:\n// استخدام useState:\n// بدلاً من استخدام this.state في مكونات الفئات، نستخدم useState لإنشاء متغير count ووظيفة setCount لتحديثه.\n//  useState يأخذ القيمة الابتدائية (في هذه الحالة 0) ويعيد المتغير والوظيفة التي تغيره.\n\n// مكونات الدوال بدلاً من الفئات:\n// في هذه الطريقة، المكون Counter عبارة عن دالة بدلاً من فئة. هذا يجعل الكود أبسط وأكثر وضوحًا.\n\n// إزالة الحاجة إلى this:\n// لم نعد بحاجة إلى استخدام this لأننا نعمل مع متغيرات دوال مباشرة.\n\n// code by ather way\n// import React, { useState } from \"react\";\n// import \"./style.css\";\n\n// function Counter() {\n//   // استخدام useState لإنشاء state للعدّاد\n//   const [count, setCount] = useState(0);\n\n//   // وظيفة لزيادة قيمة العدّاد\n//   const handleIncrement = () => {\n//     setCount(count + 1);\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <span className={classRender()}>{formatCount()}</span>\n//       <button onClick={handleIncrement} className=\"btn btn-primary btn-lg\">\n//         Increment\n//       </button>\n//     </React.Fragment>\n//   );\n\n//   function classRender() {\n//     let classes = \"num1 text-\";\n//     classes += count === 0 ? \"warning\" : \"primary\";\n//     return classes;\n//   }\n\n//   function formatCount() {\n//     return count === 0 ? <h5 className=\"num1\">Zero</h5> : count;\n//   }\n// }\n\n// export default Counter;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Counter","classRender","classes","props","counter","value","formatCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","render","Fragment","id","onClick","handleIncrement","onDelete"],"sources":["C:/Users/OMAR/new-app-react/src/component/counter.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nclass Counter extends Component {\r\n    classRender() {\r\n        let classes = \"num1 text-\";\r\n        classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount() {\r\n        const { value } = this.props.counter;\r\n        return value === 0 ? <span className='num1'>Zero</span> : value;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h4>Counter #{this.props.counter.id}</h4> \r\n                <span className={this.classRender()}>{this.formatCount()}</span>\r\n                <button\r\n                    onClick={this.props.handleIncrement(this.props.counter)}\r\n                    className='btn btn-primary btn-lg'\r\n                >\r\n                    Increment\r\n                </button>\r\n                <button \r\n                    onClick={() => this.props.onDelete(this.props.counter.id)} \r\n                    className='btn btn-danger btn-sm m-2'\r\n                >\r\n                    Delete\r\n                </button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n\r\n\r\n// الفرق الأساسي هنا:\r\n// استخدام useState:\r\n// بدلاً من استخدام this.state في مكونات الفئات، نستخدم useState لإنشاء متغير count ووظيفة setCount لتحديثه.\r\n//  useState يأخذ القيمة الابتدائية (في هذه الحالة 0) ويعيد المتغير والوظيفة التي تغيره.\r\n\r\n// مكونات الدوال بدلاً من الفئات:\r\n// في هذه الطريقة، المكون Counter عبارة عن دالة بدلاً من فئة. هذا يجعل الكود أبسط وأكثر وضوحًا.\r\n\r\n// إزالة الحاجة إلى this:\r\n// لم نعد بحاجة إلى استخدام this لأننا نعمل مع متغيرات دوال مباشرة.\r\n\r\n\r\n// code by ather way\r\n// import React, { useState } from \"react\";\r\n// import \"./style.css\";\r\n\r\n// function Counter() {\r\n//   // استخدام useState لإنشاء state للعدّاد\r\n//   const [count, setCount] = useState(0);\r\n\r\n//   // وظيفة لزيادة قيمة العدّاد\r\n//   const handleIncrement = () => {\r\n//     setCount(count + 1);\r\n//   };\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <span className={classRender()}>{formatCount()}</span>\r\n//       <button onClick={handleIncrement} className=\"btn btn-primary btn-lg\">\r\n//         Increment\r\n//       </button>\r\n//     </React.Fragment>\r\n//   );\r\n\r\n//   function classRender() {\r\n//     let classes = \"num1 text-\";\r\n//     classes += count === 0 ? \"warning\" : \"primary\";\r\n//     return classes;\r\n//   }\r\n\r\n//   function formatCount() {\r\n//     return count === 0 ? <h5 className=\"num1\">Zero</h5> : count;\r\n//   }\r\n// }\r\n\r\n// export default Counter;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,OAAO,SAASH,SAAS,CAAC;EAC5BI,WAAWA,CAAA,EAAG;IACV,IAAIC,OAAO,GAAG,YAAY;IAC1BA,OAAO,IAAI,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,SAAS;IACjE,OAAOH,OAAO;EAClB;EAEAI,WAAWA,CAAA,EAAG;IACV,MAAM;MAAED;IAAM,CAAC,GAAG,IAAI,CAACF,KAAK,CAACC,OAAO;IACpC,OAAOC,KAAK,KAAK,CAAC,gBAAGN,OAAA;MAAMQ,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,GAAGP,KAAK;EACnE;EAEAQ,MAAMA,CAAA,EAAG;IACL,oBACId,OAAA,CAACH,KAAK,CAACkB,QAAQ;MAAAN,QAAA,gBACXT,OAAA;QAAAS,QAAA,GAAI,WAAS,EAAC,IAAI,CAACL,KAAK,CAACC,OAAO,CAACW,EAAE;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzCb,OAAA;QAAMQ,SAAS,EAAE,IAAI,CAACN,WAAW,CAAC,CAAE;QAAAO,QAAA,EAAE,IAAI,CAACF,WAAW,CAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChEb,OAAA;QACIiB,OAAO,EAAE,IAAI,CAACb,KAAK,CAACc,eAAe,CAAC,IAAI,CAACd,KAAK,CAACC,OAAO,CAAE;QACxDG,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EACrC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTb,OAAA;QACIiB,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACb,KAAK,CAACe,QAAQ,CAAC,IAAI,CAACf,KAAK,CAACC,OAAO,CAACW,EAAE,CAAE;QAC1DR,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EACxC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEzB;AACJ;AAEA,eAAeZ,OAAO;;AAGtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}