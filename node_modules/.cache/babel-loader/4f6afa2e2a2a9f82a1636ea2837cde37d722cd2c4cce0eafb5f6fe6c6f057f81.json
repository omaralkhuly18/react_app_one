{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OMAR\\\\new-app-react\\\\src\\\\component\\\\list_test.jsx\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport Counter from './counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Counters: [{\n        id: 1,\n        value: 5\n      }, {\n        id: 2,\n        value: 9\n      }, {\n        id: 3,\n        value: 4\n      }, {\n        id: 4,\n        value: 6\n      }],\n      inputValue: 0 // Track input value in state\n    };\n    // Handle input change\n    this.handleInputChange = event => {\n      this.setState({\n        inputValue: parseInt(event.target.value)\n      });\n    };\n    // Handle updating the first counter with the input value\n    this.handleUpdateCounter = () => {\n      const updatedCounters = [...this.state.Counters];\n      updatedCounters[0].value = this.state.inputValue; // Update the first counter as an example\n      this.setState({\n        Counters: updatedCounters\n      });\n    };\n  }\n  renderTags() {\n    if (this.state.Counters.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ms_error\",\n      children: \"this array is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 54\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list_test_one\",\n      children: this.state.Counters.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Counter, {\n          value: item.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: this.state.inputValue,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter a number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleUpdateCounter,\n        children: \"Update First Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), this.state.Counters.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms_error\",\n        children: \"this array is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 54\n      }, this), this.renderTags()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Counters;","map":{"version":3,"names":["React","Component","Counter","jsxDEV","_jsxDEV","Counters","constructor","args","state","id","value","inputValue","handleInputChange","event","setState","parseInt","target","handleUpdateCounter","updatedCounters","renderTags","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","render","Fragment","type","onChange","placeholder","onClick"],"sources":["C:/Users/OMAR/new-app-react/src/component/list_test.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './style.css';\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n    state = { \r\n        Counters: [\r\n            { id: 1, value: 5 },\r\n            { id: 2, value: 9 }, \r\n            { id: 3, value: 4 }, \r\n            { id: 4, value: 6 } \r\n        ],\r\n        inputValue: 0 // Track input value in state\r\n    };\r\n\r\n    // Handle input change\r\n    handleInputChange = (event) => {\r\n        this.setState({ inputValue: parseInt(event.target.value) });\r\n    };\r\n\r\n    // Handle updating the first counter with the input value\r\n    handleUpdateCounter = () => {\r\n        const updatedCounters = [...this.state.Counters];\r\n        updatedCounters[0].value = this.state.inputValue; // Update the first counter as an example\r\n        this.setState({ Counters: updatedCounters });\r\n    };\r\n\r\n    renderTags() {\r\n        if (this.state.Counters.length === 0) return <p className='ms_error'>this array is empty</p>;\r\n        return (\r\n            <ul className='list_test_one'>\r\n                {this.state.Counters.map(item => (\r\n                    <li key={item.id}>\r\n                        <Counter value={item.value} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {/* Input field with an onChange handler */}\r\n                <input \r\n                    type=\"number\" \r\n                    value={this.state.inputValue} \r\n                    onChange={this.handleInputChange} \r\n                    placeholder=\"Enter a number\" \r\n                />\r\n                <button onClick={this.handleUpdateCounter}>Update First Counter</button>\r\n\r\n                <br />\r\n                {this.state.Counters.length === 0 && <p className='ms_error'>this array is empty</p>}\r\n                {this.renderTags()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counters;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}