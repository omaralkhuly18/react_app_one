{"ast":null,"code":"// import React, { Component } from 'react';\n// import './style.css'\n\n// class counter extends Component {\n//     state = { \n//         count: 0,\n//      } \n//     render() { \n//         return (\n//             <React.Fragment>\n//                 <span className={ this.classRender() }>{this.formatCount()}</span>\n//                 <button \n//                  onClick={this.handleIncrement} \n//                 className='btn btn-primary btn-lg'>\n//                    Increment\n//                 </button>\n//             </React.Fragment>\n//         );\n//     }\n//     // fun => When you press the button containing that function, it starts increasing the numbers sequentially.\n//     // عند الضغط على الزر المحتوى على تلك الداله يبدأ بزيادة الأرقام تسلسليا\n//     handleIncrement = () => {\n//         // باستخدام setState لتزيد القيمة بمقدار 1 في كل مرة يتم الضغط على الزر.\n//         this.setState({ count: this.state.count + 1 });\n//     };\n//     // fun => If the count is zero, it is the primary color, and if it is greater than zero, it changes color.\n//     // إذا كان الكونت يساوي صفر فيكون باللون الأساسي وإذا زاد عن صفر فيغير اللون.\n//     classRender() {\n//         let classes = \"num1 text-\";\n//         classes += this.state.count === 0 ? \"warning\" : \"primary\";\n//         return classes;\n//     }\n\n//     // fun => Convert zero number to word\n//     // تحويل الصفر رقم إلى كلمه\n//     formatCount(){\n//         const{count}=this.state\n//         return count=== 0?<span className='num1'>Zero</span>:count\n//     }\n// }\n\n// export default counter;","map":{"version":3,"names":[],"sources":["C:/Users/OMAR/one-app/src/component/counter.jsx"],"sourcesContent":["// import React, { Component } from 'react';\r\n// import './style.css'\r\n\r\n// class counter extends Component {\r\n//     state = { \r\n//         count: 0,\r\n//      } \r\n//     render() { \r\n//         return (\r\n//             <React.Fragment>\r\n//                 <span className={ this.classRender() }>{this.formatCount()}</span>\r\n//                 <button \r\n//                  onClick={this.handleIncrement} \r\n//                 className='btn btn-primary btn-lg'>\r\n//                    Increment\r\n//                 </button>\r\n//             </React.Fragment>\r\n//         );\r\n//     }\r\n//     // fun => When you press the button containing that function, it starts increasing the numbers sequentially.\r\n//     // عند الضغط على الزر المحتوى على تلك الداله يبدأ بزيادة الأرقام تسلسليا\r\n//     handleIncrement = () => {\r\n//         // باستخدام setState لتزيد القيمة بمقدار 1 في كل مرة يتم الضغط على الزر.\r\n//         this.setState({ count: this.state.count + 1 });\r\n//     };\r\n//     // fun => If the count is zero, it is the primary color, and if it is greater than zero, it changes color.\r\n//     // إذا كان الكونت يساوي صفر فيكون باللون الأساسي وإذا زاد عن صفر فيغير اللون.\r\n//     classRender() {\r\n//         let classes = \"num1 text-\";\r\n//         classes += this.state.count === 0 ? \"warning\" : \"primary\";\r\n//         return classes;\r\n//     }\r\n\r\n//     // fun => Convert zero number to word\r\n//     // تحويل الصفر رقم إلى كلمه\r\n//     formatCount(){\r\n//         const{count}=this.state\r\n//         return count=== 0?<span className='num1'>Zero</span>:count\r\n//     }\r\n// }\r\n \r\n// export default counter;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}